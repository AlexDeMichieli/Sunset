name: "Code Scanning - Action"

on:
  push:
    branches: [main]

jobs:
  CodeQL-Build:
    # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        # Override language selection by uncommenting this and choosing your languages
        # with:
        #   languages: go, javascript, csharp, python, cpp, java

      # Autobuild attempts to build any compiled languages (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below).
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      # ✏️ If the Autobuild fails above, remove it and uncomment the following
      #    three lines and modify them (or add more) to build your code if your
      #    project uses a compiled language

      #- run: |
      #     make bootstrap
      #     make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Upload Sarif Report to Workflow
        uses: actions/upload-artifact@v3
        with:
          name: sarif-report-${{ matrix.language }}
          path: /home/runner/work/**/*.sarif
    
  
  # Detect-Errors:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       language: [ 'csharp', 'javascript' ]
  #   needs:
  #     - analyze
  #   steps:
  #   - name: Download Sarif Report
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: sarif-report-${{ matrix.language }}

  #   - name: Detect Errors
  #     run: |
  #       repo=$(echo ${{ github.repository }} | awk -F'/' '{print $2}')
  #       results=$(cat $repo/results/${{ matrix.language }}-builtin.sarif | jq -r '.runs[].results[].ruleId')
  #       resultsArray=($results)
        
  #       echo "${resultsArray[*]}"
  #       errorCount=0
  #       warningCount=0
  #       noteCount=0
  #       for var in "${resultsArray[@]}"
  #       do
  #         severity=$(cat $repo/results/${{ matrix.language }}-builtin.sarif | jq -r '.runs[].tool.driver.rules[] | select(.id=="'$var'").properties."problem.severity"')
  #         echo "${var} | $severity"
  #         if [ "$severity" == "warning" ]; then let warningCount+=1; fi
  #         if [ "$severity" == "error" ]; then let errorount+=1; fi
  #         if [ "$severity" == "note" ]; then let noteount+=1; fi
  #       done
  #       echo ""
  #       echo "Error Count: $errorCount"
  #       echo "Warning Count: $warningCount"
  #       echo "Note Count: $noteCount"
  #       echo ""
  #       if (( $errorCount > 0 )); then
  #           echo "errors found - failing detect error check..."
  #           exit -1
  #       fi
  #       if (( $warningCount > 0 )); then
  #           echo "warnings found - failing detect warning check..."
  #           exit -1
  #       fi
